rw <- read.csv("activity.csv")
View(rw)
rw <- read.csv("activity.csv", header=true, colClasses = c("numeric", "character",
"integer"))
rw <- read.csv("activity.csv", header = TRUE, colClasses = c("numeric", "character",
"integer"))
View(rw)
data$date <- ymd(data$date)
library(lubridate)
install.packages("lubridate")
data$date <- ymd(data$date)
library(lubridate)
data$date <- ymd(data$date)
rw$date <- ymd(rw$date)
View(rw)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
install.packages("dplyr")
library(dplyr)
steps <- data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
steps <- rw %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(steps = sum(steps)) %>%
print
rw_ft = filter(rw, !is.na(steps))
View(rw_ft)
rw_ag = aggregate(rw_ft,date,sum)
rw_ag = aggregate(rw_ft, list(date),sum)
rw_ag = aggregate(steps ~ date, data = rw, sum)
View(rw_ag)
mean_steps <- mean(rw_ag$steps, na.rm = TRUE)
rw_ft = filter(rw, !is.na(steps), group_by(date), summarize(rw_ft = sum(rw_ft)))
rw_ft = filter(rw, !is.na(steps))
rw_ag = aggregate(steps ~ date, data = rw, sum)
mean_steps <- mean(rw_ag$steps, na.rm = TRUE)
View(rw)
rw_ag = aggregate(steps + interval ~ date, data = rw, sum)
View(rw_ag)
ggplot(rw_ag, aes(x = steps)) +
geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
install.packages("ggplot")
library(ggplot)
install.packages("ggplot2")
library(ggplot2)
ggplot(rw_ag, aes(x = steps)) +
geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
hist(rw_ag)
ggplot(rw_ag, aes(x = steps)) +
geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
ggplot(steps, aes(x = steps)) +
geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
View(steps)
View(rw_ag)
rw_ft = filter(rw, !is.na(steps))
rw_ag = aggregate(steps ~ date, data = rw, sum)
View(rw_ag)
ggplot(rw_ag, aes(x = steps)) +
geom_histogram(fill = "firebrick", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
ggplot(rw_ag, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
rw_ft = filter(rw, !is.na(steps))
rw_ag_steps = aggregate(steps ~ date, data = rw_ft, sum)
ggplot(rw_ag, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 1000) +
labs(title = "Histogram of Steps per day", x = "Steps per day", y = "Frequency")
mean_steps <- mean(rw_ag$steps, na.rm = TRUE)
rw_ag_act = aggregate(interval ~ date, data = rw_ft, mean)
View(rw_ag_act)
rw_ag_act = aggregate(steps ~ interval, data = rw_ft, mean)
View(rw_ag_act)
interval <- rw_ft %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(steps = mean(steps))
View(interval)
ggplot(rw_ag_act, aes(x=interval, y=steps)) +
geom_line(color = "blue")
interval[which.max(interval$steps),]
median_steps <- median(rw_ag$steps, na.rm = TRUE)
interval[which.max(rw_ag_act$steps),]
sum(is.na(rw$steps))
rw_full <- rw
nas <- is.na(rw_full$steps)
avg_interval <- tapply(rw_full$steps, rw_full$interval, mean, na.rm=TRUE, simplify=TRUE)
rw_full$steps[nas] <- avg_interval[as.character(rw_full$interval[nas])]
sum(is.na(rw_full$steps))
